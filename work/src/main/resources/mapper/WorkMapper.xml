<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wxj.work.mapper.WorkMapper">
  <resultMap id="BaseResultMap" type="com.wxj.work.entity.Work">
    <id column="work_id" jdbcType="BIGINT" property="workId" />
    <result column="work_name" jdbcType="VARCHAR" property="workName" />
    <result column="create_user_id" jdbcType="BIGINT" property="createUserId" />
    <result column="create_time" jdbcType="VARCHAR" property="createTime" />
    <result column="end_time" jdbcType="VARCHAR" property="endTime" />
    <result column="company_id" jdbcType="INTEGER" property="companyId" />
    <result column="state" jdbcType="INTEGER" property="state" />
    <result column="start_description" jdbcType="VARCHAR" property="startDescription" />
    <result column="confidential" jdbcType="INTEGER" property="confidential" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    work_id, work_name, create_user_id, create_time, end_time, company_id, state, start_description, 
    confidential
  </sql>
  <select id="selectByExample" parameterType="com.wxj.work.entity.WorkExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from work
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from work
    where work_id = #{workId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from work
    where work_id = #{workId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.wxj.work.entity.WorkExample">
    delete from work
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.wxj.work.entity.Work">
    insert into work (work_id, work_name, create_user_id, 
      create_time, end_time, company_id, 
      state, start_description, confidential
      )
    values (#{workId,jdbcType=BIGINT}, #{workName,jdbcType=VARCHAR}, #{createUserId,jdbcType=BIGINT}, 
      #{createTime,jdbcType=VARCHAR}, #{endTime,jdbcType=VARCHAR}, #{companyId,jdbcType=INTEGER}, 
      #{state,jdbcType=INTEGER}, #{startDescription,jdbcType=VARCHAR}, #{confidential,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.wxj.work.entity.Work">
    insert into work
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="workId != null">
        work_id,
      </if>
      <if test="workName != null">
        work_name,
      </if>
      <if test="createUserId != null">
        create_user_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="endTime != null">
        end_time,
      </if>
      <if test="companyId != null">
        company_id,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="startDescription != null">
        start_description,
      </if>
      <if test="confidential != null">
        confidential,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="workId != null">
        #{workId,jdbcType=BIGINT},
      </if>
      <if test="workName != null">
        #{workName,jdbcType=VARCHAR},
      </if>
      <if test="createUserId != null">
        #{createUserId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="endTime != null">
        #{endTime,jdbcType=VARCHAR},
      </if>
      <if test="companyId != null">
        #{companyId,jdbcType=INTEGER},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
      <if test="startDescription != null">
        #{startDescription,jdbcType=VARCHAR},
      </if>
      <if test="confidential != null">
        #{confidential,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.wxj.work.entity.WorkExample" resultType="java.lang.Long">
    select count(*) from work
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update work
    <set>
      <if test="record.workId != null">
        work_id = #{record.workId,jdbcType=BIGINT},
      </if>
      <if test="record.workName != null">
        work_name = #{record.workName,jdbcType=VARCHAR},
      </if>
      <if test="record.createUserId != null">
        create_user_id = #{record.createUserId,jdbcType=BIGINT},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=VARCHAR},
      </if>
      <if test="record.endTime != null">
        end_time = #{record.endTime,jdbcType=VARCHAR},
      </if>
      <if test="record.companyId != null">
        company_id = #{record.companyId,jdbcType=INTEGER},
      </if>
      <if test="record.state != null">
        state = #{record.state,jdbcType=INTEGER},
      </if>
      <if test="record.startDescription != null">
        start_description = #{record.startDescription,jdbcType=VARCHAR},
      </if>
      <if test="record.confidential != null">
        confidential = #{record.confidential,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update work
    set work_id = #{record.workId,jdbcType=BIGINT},
      work_name = #{record.workName,jdbcType=VARCHAR},
      create_user_id = #{record.createUserId,jdbcType=BIGINT},
      create_time = #{record.createTime,jdbcType=VARCHAR},
      end_time = #{record.endTime,jdbcType=VARCHAR},
      company_id = #{record.companyId,jdbcType=INTEGER},
      state = #{record.state,jdbcType=INTEGER},
      start_description = #{record.startDescription,jdbcType=VARCHAR},
      confidential = #{record.confidential,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.wxj.work.entity.Work">
    update work
    <set>
      <if test="workName != null">
        work_name = #{workName,jdbcType=VARCHAR},
      </if>
      <if test="createUserId != null">
        create_user_id = #{createUserId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="endTime != null">
        end_time = #{endTime,jdbcType=VARCHAR},
      </if>
      <if test="companyId != null">
        company_id = #{companyId,jdbcType=INTEGER},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="startDescription != null">
        start_description = #{startDescription,jdbcType=VARCHAR},
      </if>
      <if test="confidential != null">
        confidential = #{confidential,jdbcType=INTEGER},
      </if>
    </set>
    where work_id = #{workId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.wxj.work.entity.Work">
    update work
    set work_name = #{workName,jdbcType=VARCHAR},
      create_user_id = #{createUserId,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=VARCHAR},
      end_time = #{endTime,jdbcType=VARCHAR},
      company_id = #{companyId,jdbcType=INTEGER},
      state = #{state,jdbcType=INTEGER},
      start_description = #{startDescription,jdbcType=VARCHAR},
      confidential = #{confidential,jdbcType=INTEGER}
    where work_id = #{workId,jdbcType=BIGINT}
  </update>
  <insert id="createNewWork" parameterType="com.wxj.work.entity.Work" useGeneratedKeys="true" keyProperty="workId" keyColumn="work_id">
    insert into work (work_id, work_name, create_user_id, create_time, end_time, company_id, state, start_description, end_description, confidential)
    values (0,#{workName},#{createUserId},#{createTime},'',#{companyId},0,#{startDescription},'',#{confidential})
  </insert>

  <!--权限1查看所有进行中工作，只有查看权限的用户查看所有进行中工作-->
  <select id="queryAllOnWorkingWorkPermission1" resultMap="BaseResultMap">
    select * from work where company_id=(select company_id from user where number=#{number}) and confidential=0 and state=0
    union
    select * from work where company_id=(select company_id from user where number =#{number}) and confidential=1 and state=0 and work_id in (
      select work_id from work_flow where company_id=(select company_id from user where number =#{number}) and host_id=#{number}
      union
      select work_id from helper where company_id=(select company_id from user where number =#{number}) and helper_user_id=#{number}
      union
      select work_id from work where company_id=(select company_id from user where number =#{number}) and create_user_id=#{number}
    );
  </select>
  <!--权限1查看所有进行中工作，只有查看权限的用户查看所有已完结工作-->
  <select id="queryAllFinishedWorkPermission1" resultMap="BaseResultMap">
    select * from work where company_id=(select company_id from user where number=#{number}) and confidential=0 and state=1
    union
    select * from work where company_id=(select company_id from user where number =#{number}) and confidential=1 and state=1 and work_id in (
      select work_id from work_flow where company_id=(select company_id from user where number =#{number}) and host_id=#{number}
      union
      select work_id from helper where company_id=(select company_id from user where number =#{number}) and helper_user_id=#{number}
      union
      select work_id from work where company_id=(select company_id from user where number =#{number}) and create_user_id=#{number}
    );
  </select>

  <!--查看参与的进行中工作-->
  <select id="queryJoinInOnWorkingWork" resultMap="BaseResultMap">
    select * from work where company_id=(select company_id from user where number =#{number}) and state=0 and work_id in (
      select work_id from work_flow where company_id=(select company_id from user where number =#{number}) and host_id=#{number}
      union
      select work_id from helper where company_id=(select company_id from user where number =#{number}) and helper_user_id=#{number}
      union
      select work_id from work where company_id=(select company_id from user where number =#{number}) and create_user_id=#{number}
    );
  </select>

  <!--查看参与的已结束工作-->
  <select id="queryJoinInFinishedWork" resultMap="BaseResultMap">
    select * from work where company_id=(select company_id from user where number =#{number}) and state=1 and work_id in (
      select work_id from work_flow where company_id=(select company_id from user where number =#{number}) and host_id=#{number}
      union
      select work_id from helper where company_id=(select company_id from user where number =#{number}) and helper_user_id=#{number}
      union
      select work_id from work where company_id=(select company_id from user where number =#{number}) and create_user_id=#{number}
    );
  </select>



</mapper>